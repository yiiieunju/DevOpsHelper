plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

repositories {
    mavenCentral()
}

allprojects{
	tasks.withType(JavaCompile) {
    	options.encoding = 'UTF-8'
	}
}

subprojects { // 모든 하위 모듈들에 이 설정을 적용합니다.
    group 'com.ktds.devopshelper'
    version '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    apply plugin: 'java'
    //apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }
    
    //spring cloud 라이브러리에 대한 공통버전 추
    dependencyManagement {
	    imports {
	        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2023.0.3'
	    }
	}


    dependencies { // 모든 하위 모듈에 추가 될 의존성 목록
		//validation 
		implementation 'org.springframework.boot:spring-boot-starter-validation'		
		
	    //spring doc library
	    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.0.2'
	
		//test
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		
		//annotation
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
		
		//lombok
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		
		//spring cloud
		implementation 'org.springframework.cloud:spring-cloud-starter-config' //config와 연동하기위한 라이브러리에대한 의존
		implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap' // bootstrap.yml파일을 사용하기위한 라이브러
		
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

	test {
        useJUnitPlatform()
    }
}

project(':faq-service-module') {
    dependencies {
        implementation project(':common-module')
        
        //web
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		
		//eureka client 라이브러리 추가해줘야함.
		implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        
        //jdbc
		implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.1.2'
		implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'
        
    }
}

project(':common-module') {
    dependencies {
        
        //web
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        
        //jdbc
		implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.1.2'
		implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'
        
    }
}


project(':eureka-server') {
    dependencies {
       
    }
}

project(':gateway-server') {
    dependencies {
    
    }
}

project(':authentication-server') {
    dependencies {
        implementation project(':common-module')
        
        //eureka
        implementation 'org.springframework.cloud:spring-cloud-starter'
		implementation 'org.springframework.cloud:spring-cloud-starter-config'
		implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
		
		//jwt
		implementation group: 'com.auth0', name: 'java-jwt', version: '3.19.2'
		
		//bootstrap
		implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
		
		//jdbc
		implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.1.2'
    	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    	
    	//web
    	implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}